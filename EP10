#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#define INF 1000000000

int grafo[1005][1005], dist[1005];
bool visitado[1005];

void dijkstra(int n, int origem, int destino) {
    int i, j, menor, atual;
    for (i = 1; i <= n; i++) {
        dist[i] = INF;
        visitado[i] = false;
    }
    dist[origem] = 0;

    for (i = 1; i < n; i++) {
        menor = INF;
        for (j = 1; j <= n; j++) {
            if (!visitado[j] && dist[j] < menor) {
                atual = j;
                menor = dist[j];
            }
        }
        visitado[atual] = true;
        for (j = 1; j <= n; j++) {
            if (grafo[atual][j] && !visitado[j] && dist[atual] + grafo[atual][j] < dist[j]) {
                dist[j] = dist[atual] + grafo[atual][j];
            }
        }
    }

    printf("%d\n", dist[destino]);
}

int main() {
    int n, m, a, b, c, r, e, i, j;
    while (scanf("%d %d", &n, &m) != EOF) {
        for (i = 1; i <= n; i++) {
            for (j = 1; j <= n; j++) {
                grafo[i][j] = 0;
            }
        }
        for (i = 0; i < m; i++) {
            scanf("%d %d", &a, &b);
            grafo[a][b] = grafo[b][a] = 1;
        }
        scanf("%d %d %d", &c, &r, &e);
        for (i = 1; i <= n; i++) {
            grafo[e][i] = grafo[i][e] = 0;
        }
        dijkstra(n, c, r);
    }
    return 0;
}
