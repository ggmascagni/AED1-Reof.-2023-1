#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void swap(int* a, int* b) {
    int t = *a;
    *a = *b;
    *b = t;
}

int partition(int arr[], int low, int high) {
    int pivot = arr[high];
    int i = (low - 1);

    for (int j = low; j <= high - 1; j++) {
        if (arr[j] <= pivot) {
            i++;
            swap(&arr[i], &arr[j]);
        }
    }

    swap(&arr[i + 1], &arr[high]);
    return (i + 1);
}

void quickSort(int arr[], int low, int high) {
    if (low < high) {
        int pi = partition(arr, low, high);

        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}

int main() {
    int n, i;
    clock_t inicio, fim;
    double tempo;

    printf("Entre com o tamanho do array: ");
    scanf("%d", &n);

    int arr[n];

    // Preenche o array com números aleatórios
    srand(time(NULL));
    for (i = 0; i < n; i++) {
        arr[i] = rand();
    }

    inicio = clock(); // marca o tempo inicial

    quickSort(arr, 0, n - 1);

    fim = clock(); // marca o tempo final

    tempo = (double)(fim - inicio) * 1000 / CLOCKS_PER_SEC; // calcula o tempo em milissegundos

    printf("\nO algoritmo de ordenação levou %.2f milissegundos para ser executado.\n", tempo);

    return 0;
}
