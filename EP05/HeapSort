#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void heapify(int arr[], int n, int i) {
    int largest = i;
    int left = 2 * i + 1;
    int right = 2 * i + 2;

    if (left < n && arr[left] > arr[largest]) {
        largest = left;
    }

    if (right < n && arr[right] > arr[largest]) {
        largest = right;
    }

    if (largest != i) {
        int temp = arr[i];
        arr[i] = arr[largest];
        arr[largest] = temp;
        heapify(arr, n, largest);
    }
}

void heapSort(int arr[], int n) {
    for (int i = n / 2 - 1; i >= 0; i--) {
        heapify(arr, n, i);
    }

    for (int i = n - 1; i >= 0; i--) {
        int temp = arr[0];
        arr[0] = arr[i];
        arr[i] = temp;
        heapify(arr, i, 0);
    }
}

int main() {
    int n, i;
    clock_t inicio, fim;
    double tempo;

    printf("Entre com o tamanho do array: ");
    scanf("%d", &n);

    int arr[n];

    // Preenche o array com números aleatórios
    srand(time(NULL));
    for (i = 0; i < n; i++) {
        arr[i] = rand();
    }

    inicio = clock(); // marca o tempo inicial

    heapSort(arr, n);

    fim = clock(); // marca o tempo final

    tempo = (double)(fim - inicio) * 1000 / CLOCKS_PER_SEC; // calcula o tempo em milissegundos

    printf("\nO algoritmo de ordenação levou %.2f milissegundos para ser executado.\n", tempo);

    return 0;
}
